<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectedDevice" xml:space="preserve">
    <value>Connected Device:</value>
  </data>
  <data name="SelectAction" xml:space="preserve">
    <value>Select an action:</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>1. Backup</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>2. Restore from Backup</value>
  </data>
  <data name="WI-Fi Connect" xml:space="preserve">
    <value>3. Connect via Wi-Fi</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>0. Exit</value>
  </data>
  <data name="IncorrectSelection" xml:space="preserve">
    <value>Incorrect selection. Press any key to reselect.</value>
  </data>
  <data name="ConnectionStatus.status" xml:space="preserve">
    <value>No connected device</value>
  </data>
  <data name="ConnectionStatus.Wifi" xml:space="preserve">
    <value>Connected via Wi-Fi</value>
  </data>
  <data name="ConnectionStatus.USB" xml:space="preserve">
    <value>Connected via USB</value>
  </data>
  <data name="ConnectionStatus.State" xml:space="preserve">
    <value>The current status of the connection:</value>
  </data>
  <data name="ConnectToDeviceOverWifi.StartMSG" xml:space="preserve">
    <value>To connect via Wi-Fi you need to turn it on and go to (Debug via Wi-Fi -&gt; Connect device with connection code) and enter the data from there</value>
  </data>
  <data name="ConnectToDeviceOverWifi.EnterIP" xml:space="preserve">
    <value>Enter the IP address of the device (e.g. 192.168.1.2): </value>
  </data>
  <data name="ConnectToDeviceOverWifi.EnterPORT" xml:space="preserve">
    <value>Enter the port: </value>
  </data>
  <data name="ConnectToDeviceOverWifi.EnterCODE" xml:space="preserve">
    <value>Enter the Wi-fi network connection code: </value>
  </data>
  <data name="ConnectToDeviceOverWifi.Connected" xml:space="preserve">
    <value>The device is connected via Wi-Fi.</value>
  </data>
  <data name="ConnectToDeviceOverWifi.ConnectERROR" xml:space="preserve">
    <value>Wi-Fi connection error.</value>
  </data>
  <data name="ConnectToDeviceOverWifi.EmptyIP" xml:space="preserve">
    <value>The IP address cannot be blank.</value>
  </data>
  <data name="ConnectToDeviceOverWifi.PressAnyKey" xml:space="preserve">
    <value>Press any key to return to the main menu.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value> Return to main menu (9)</value>
  </data>
  <data name="StartBackup" xml:space="preserve">
    <value> Start backup (1)</value>
  </data>
  <data name="BackupMenu" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="StartRestore" xml:space="preserve">
    <value> Restore from backup (1)</value>
  </data>
  <data name="RestoreMenu" xml:space="preserve">
    <value>Restore from backup</value>
  </data>
  <data name="BackupMedia.Start" xml:space="preserve">
    <value>Backup Startup...</value>
  </data>
  <data name="AdbError" xml:space="preserve">
    <value>ADB Error:</value>
  </data>
  <data name="BackupMedia.TotalFiles" xml:space="preserve">
    <value>Total number of files:</value>
  </data>
  <data name="BackupMedia.Android/data Count" xml:space="preserve">
    <value>The number of files in Android/data/:</value>
  </data>
  <data name="BackupMedia.TotalFileSize" xml:space="preserve">
    <value>The total size of the files found:</value>
  </data>
  <data name="BackupMedia.Photo" xml:space="preserve">
    <value>1. Photo</value>
  </data>
  <data name="BackupMedia.Video" xml:space="preserve">
    <value>2. Video</value>
  </data>
  <data name="BackupMedia.Audio" xml:space="preserve">
    <value>3. Audio</value>
  </data>
  <data name="BackupMedia.Documents" xml:space="preserve">
    <value>4. Documents</value>
  </data>
  <data name="BackupMedia.Conventional" xml:space="preserve">
    <value>conventional</value>
  </data>
  <data name="BackupMedia.Hidden" xml:space="preserve">
    <value>hidden</value>
  </data>
  <data name="BackupMedia.In android/data" xml:space="preserve">
    <value>in Android/data/</value>
  </data>
  <data name="BackupMedia.EnterNumb" xml:space="preserve">
    <value>Enter the numbers of the file types, separated by a space, that you want to save (e.g. 1 2 for photos and videos):</value>
  </data>
  <data name="BackupMedia.PressH" xml:space="preserve">
    <value>Type 'H' to include hidden files in the backup.</value>
  </data>
  <data name="BackupMedia.PressD" xml:space="preserve">
    <value>Type 'D' to include files from android/data/ in the backup.</value>
  </data>
  <data name="BackupMedia.IncorrectSelect" xml:space="preserve">
    <value>Incorrect selection. Backup canceled.</value>
  </data>
  <data name="BackupMedia.Copied" xml:space="preserve">
    <value>copied</value>
  </data>
  <data name="BackupMedia.CopyError" xml:space="preserve">
    <value>Error when copying a file:</value>
  </data>
  <data name="BackupMedia.BackupArchive" xml:space="preserve">
    <value>I'm creating a backup archive.</value>
  </data>
  <data name="BackupMedia.BackupCreated" xml:space="preserve">
    <value>The backup has been successfully created:</value>
  </data>
  <data name="BackupMedia.Size" xml:space="preserve">
    <value>Backup Size:</value>
  </data>
  <data name="RestoreMedia.SelectRestoreFile" xml:space="preserve">
    <value>Select the file to restore:</value>
  </data>
  <data name="RestoreMedia.FileNotSelected" xml:space="preserve">
    <value>File not found or not selected.</value>
  </data>
  <data name="RestoreMedia.MetadataNotFind" xml:space="preserve">
    <value>Metadata file could not be found. Restoration is not possible.</value>
  </data>
  <data name="RestoreMedia.ReadingError" xml:space="preserve">
    <value>Error reading the metadata file.</value>
  </data>
  <data name="RestoreMedia.SelectRestoreFiles" xml:space="preserve">
    <value>Enter the numbers of the file types, separated by a space, that you want to recover (for example, 1 2 for photos and videos):</value>
  </data>
  <data name="RestoreMedia.IncorrectSelection" xml:space="preserve">
    <value>Incorrect selection. Restore canceled.</value>
  </data>
  <data name="Restored" xml:space="preserve">
    <value>restored.</value>
  </data>
  <data name="RestoreMedia.ErrorRestoring" xml:space="preserve">
    <value>Error while restoring a file:</value>
  </data>
  <data name="RestoreMedia.RestoreDone" xml:space="preserve">
    <value>Restoration is complete.</value>
  </data>
  <data name="FolderNotFind" xml:space="preserve">
    <value>Backup folder not found.</value>
  </data>
  <data name="NoAvailableBackups" xml:space="preserve">
    <value>There are no available backups to restore.</value>
  </data>
  <data name="SelectFileNumb" xml:space="preserve">
    <value>Enter the file number of the file to be recovered: </value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copying:</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Archiving" xml:space="preserve">
    <value>Archiving:</value>
  </data>
  <data name="ConnectDevice" xml:space="preserve">
    <value>Connect your device.</value>
  </data>
  <data name="PressC" xml:space="preserve">
    <value>Or type 'C' to continue without the device.</value>
  </data>
</root>